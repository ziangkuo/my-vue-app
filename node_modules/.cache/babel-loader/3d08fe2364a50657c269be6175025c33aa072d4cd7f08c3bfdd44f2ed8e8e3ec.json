{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Mock from 'mockjs';\nimport Cookie from 'js-cookie';\nimport { getMenu } from '../api';\nimport firebaseConfig from '../firebase/init.js';\nimport { getAuth, signInWithPopup, GoogleAuthProvider, signInWithEmailAndPassword } from \"firebase/auth\";\nconst auth = getAuth();\nexport default {\n  data() {\n    return {\n      form: {\n        mail: '',\n        password: '',\n        user: '',\n        isSignedIn: false\n      },\n      rules: {\n        mail: [{\n          required: true,\n          message: '请输入邮箱',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: '请输入正确的邮箱地址',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 12,\n          message: '密码长度在6-12位之间',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submit() {\n      signInWithEmailAndPassword(auth, this.form.mail, this.form.password).then(() => {\n        alert('Successfully logged in');\n        this.$router.push('/home');\n      }).catch(error => {\n        alert(error.message);\n      });\n    }\n  },\n  handleSignInGoogle() {\n    const provider = new GoogleAuthProvider();\n    signInWithPopup(auth, provider).then(result => {\n      this.isSignedIn = true;\n      this.$router.push('/home');\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n};","map":{"version":3,"names":["Mock","Cookie","getMenu","firebaseConfig","getAuth","signInWithPopup","GoogleAuthProvider","signInWithEmailAndPassword","auth","data","form","mail","password","user","isSignedIn","rules","required","message","trigger","type","min","max","methods","submit","then","alert","$router","push","catch","error","handleSignInGoogle","provider","result","console","log"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n    <el-form ref=\"form\" class=\"login-container\" :model=\"form\" :rules=\"rules\">\r\n        <h3 class=\"title\">系统登录</h3>\r\n\r\n        <el-form-item label=\"邮箱\" prop=\"mail\">\r\n            <el-input v-model=\"form.mail\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n            <el-input type=\"password\" v-model=\"form.password\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item style=\"display: flex; justify-content: center ;\">\r\n            <el-button @click=\"submit\" type=\"primary\">登录</el-button>\r\n        </el-form-item>\r\n\r\n        <el-form-item style=\"display: flex; justify-content: right ;\">\r\n            <router-link to=\"/register\">Register</router-link>\r\n        </el-form-item>\r\n\r\n        <el-form-item id= \"GoogleSignIn\" v-if=\"!isSignedIn\">\r\n        <h3>Google SignIn </h3>\r\n        <el-button @click=\"handleSignInGoogle\">login</el-button>\r\n    </el-form-item>\r\n    </el-form>\r\n    \r\n</template>\r\n\r\n<script>\r\nimport Mock from 'mockjs'\r\nimport Cookie from 'js-cookie'\r\nimport { getMenu } from '../api'\r\nimport firebaseConfig from '../firebase/init.js'\r\nimport { getAuth, signInWithPopup, GoogleAuthProvider, signInWithEmailAndPassword } from \"firebase/auth\"\r\n\r\nconst auth = getAuth()\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            form: {\r\n                mail: '',\r\n                password: '',\r\n                user: '',\r\n                isSignedIn: false,\r\n            },\r\n            rules: {\r\n                mail: [\r\n                    { required: true, message: '请输入邮箱', trigger: 'blur' },\r\n                    { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' }\r\n                ],\r\n                password: [\r\n                    { required: true, message: '请输入密码', trigger: 'blur' },\r\n                    { min: 6, max: 12, message: '密码长度在6-12位之间', trigger: 'blur' }\r\n                ]\r\n            }\r\n\r\n        }\r\n    },\r\n    methods:{\r\n        submit(){\r\n            signInWithEmailAndPassword(auth, this.form.mail, this.form.password)\r\n            .then(() => {\r\n                alert('Successfully logged in')\r\n                this.$router.push('/home')\r\n            })\r\n            .catch(error => {\r\n                alert(error.message);\r\n            });\r\n        },\r\n    },\r\n        handleSignInGoogle() {\r\n            const provider = new GoogleAuthProvider()\r\n\r\n            signInWithPopup(auth, provider)\r\n                .then((result) => {\r\n                    this.isSignedIn = true\r\n                    this.$router.push('/home')\r\n                }).catch((error) => {\r\n                  console.log(error)\r\n                });         \r\n            },\r\n    }\r\n    \r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.login-container {\r\n    width: 400px;\r\n    margin: 180px auto;\r\n    padding: 20px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 15px;\r\n    box-shadow: 0 0 10px #ccc;\r\n\r\n    .title {\r\n        text-align: center;\r\n        font-size: 24px;\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    .el-button {\r\n        text-align: center;\r\n    }\r\n}\r\n</style>"],"mappings":";AA6BA,OAAAA,IAAA;AACA,OAAAC,MAAA;AACA,SAAAC,OAAA;AACA,OAAAC,cAAA;AACA,SAAAC,OAAA,EAAAC,eAAA,EAAAC,kBAAA,EAAAC,0BAAA;AAEA,MAAAC,IAAA,GAAAJ,OAAA;AAEA;EACAK,KAAA;IACA;MACAC,IAAA;QACAC,IAAA;QACAC,QAAA;QACAC,IAAA;QACAC,UAAA;MACA;MACAC,KAAA;QACAJ,IAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,IAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA,EACA;QACAN,QAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAE,GAAA;UAAAC,GAAA;UAAAJ,OAAA;UAAAC,OAAA;QAAA;MAEA;IAEA;EACA;EACAI,OAAA;IACAC,OAAA;MACAhB,0BAAA,CAAAC,IAAA,OAAAE,IAAA,CAAAC,IAAA,OAAAD,IAAA,CAAAE,QAAA,EACAY,IAAA;QACAC,KAAA;QACA,KAAAC,OAAA,CAAAC,IAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACAJ,KAAA,CAAAI,KAAA,CAAAZ,OAAA;MACA;IACA;EACA;EACAa,mBAAA;IACA,MAAAC,QAAA,OAAAzB,kBAAA;IAEAD,eAAA,CAAAG,IAAA,EAAAuB,QAAA,EACAP,IAAA,CAAAQ,MAAA;MACA,KAAAlB,UAAA;MACA,KAAAY,OAAA,CAAAC,IAAA;IACA,GAAAC,KAAA,CAAAC,KAAA;MACAI,OAAA,CAAAC,GAAA,CAAAL,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}