{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Mock from 'mockjs';\nimport Cookie from 'js-cookie';\nimport { getMenu } from '../api';\nexport default {\n  data() {\n    return {\n      form: {\n        mail: '',\n        password: ''\n      },\n      rules: {\n        mail: [{\n          required: true,\n          message: '请输入邮箱',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: '请输入正确的邮箱地址',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 12,\n          message: '密码长度在6-12位之间',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submit() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          this.login(this.form).then(({\n            data\n          }) => {\n            console.log(data);\n            // 如果登录成功，你可能想要将用户重定向到主页\n            this.$router.push('/home');\n          }).catch(error => {\n            console.error('Error during login:', error);\n            // 如果登录失败，你可能想要显示一个错误消息\n          });\n        } else {\n          console.log('form invalid');\n          // 如果表单无效，你可能想要显示一个错误消息\n        }\n      });\n    },\n    login(form) {\n      // 这是一个假设的登录函数，你需要替换为你的实际登录函数\n      // 这个函数应该返回一个 Promise，这个 Promise 的解析值是一个包含 data 属性的对象\n      return new Promise((resolve, reject) => {\n        axios.post('/api/login', form).then(response => resolve(response)).catch(error => reject(error));\n      });\n    }\n  }\n};","map":{"version":3,"names":["Mock","Cookie","getMenu","data","form","mail","password","rules","required","message","trigger","type","min","max","methods","submit","$refs","validate","valid","login","then","console","log","$router","push","catch","error","Promise","resolve","reject","axios","post","response"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\n    <el-form ref=\"form\" class=\"login-container\" :model=\"form\" :rules=\"rules\">\n        <h3 class=\"title\">系统登录</h3>\n        <el-form-item label=\"邮箱\" prop=\"mail\">\n            <el-input v-model=\"form.mail\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n            <el-input type=\"password\" v-model=\"form.password\"></el-input>\n        </el-form-item>\n        <el-form-item style=\"display: flex; justify-content: center ;\">\n            <el-button @click=\"submit\" type=\"primary\">登录</el-button>\n        </el-form-item>\n    </el-form>\n</template>\n\n<script>\nimport Mock from 'mockjs'\nimport Cookie from 'js-cookie'\nimport { getMenu } from '../api'\n\n\nexport default {\n    data() {\n        return {\n            form: {\n                mail: '',\n                password: ''\n            },\n            rules: {\n                mail: [\n                    { required: true, message: '请输入邮箱', trigger: 'blur' },\n                    { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' }\n                ],\n                password: [\n                    { required: true, message: '请输入密码', trigger: 'blur' },\n                    { min: 6, max: 12, message: '密码长度在6-12位之间', trigger: 'blur' }\n                ]\n            }\n\n        }\n    },\n\n\n    methods: {\n        submit() {\n            this.$refs.form.validate((valid) => {\n                if (valid) {\n                    this.login(this.form)\n                        .then(({ data }) => {\n                            console.log(data)\n                            // 如果登录成功，你可能想要将用户重定向到主页\n                            this.$router.push('/home')\n                        })\n                        .catch(error => {\n                            console.error('Error during login:', error)\n                            // 如果登录失败，你可能想要显示一个错误消息\n                        })\n                } else {\n                    console.log('form invalid')\n                    // 如果表单无效，你可能想要显示一个错误消息\n                }\n            })\n        },\n\n        login(form) {\n            // 这是一个假设的登录函数，你需要替换为你的实际登录函数\n            // 这个函数应该返回一个 Promise，这个 Promise 的解析值是一个包含 data 属性的对象\n            return new Promise((resolve, reject) => {\n                axios.post('/api/login', form)\n                    .then(response => resolve(response))\n                    .catch(error => reject(error))\n            })\n        }\n    }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.login-container {\n    width: 400px;\n    margin: 180px auto;\n    padding: 20px;\n    border: 1px solid #ccc;\n    border-radius: 15px;\n    box-shadow: 0 0 10px #ccc;\n\n    .title {\n        text-align: center;\n        font-size: 24px;\n        margin-bottom: 20px;\n    }\n\n    .el-button {\n        text-align: center;\n    }\n}\n</style>"],"mappings":";AAgBA,OAAAA,IAAA;AACA,OAAAC,MAAA;AACA,SAAAC,OAAA;AAGA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,IAAA;QACAC,QAAA;MACA;MACAC,KAAA;QACAF,IAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,IAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAE,GAAA;UAAAC,GAAA;UAAAJ,OAAA;UAAAC,OAAA;QAAA;MAEA;IAEA;EACA;EAGAI,OAAA;IACAC,OAAA;MACA,KAAAC,KAAA,CAAAZ,IAAA,CAAAa,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAC,KAAA,MAAAf,IAAA,EACAgB,IAAA;YAAAjB;UAAA;YACAkB,OAAA,CAAAC,GAAA,CAAAnB,IAAA;YACA;YACA,KAAAoB,OAAA,CAAAC,IAAA;UACA,GACAC,KAAA,CAAAC,KAAA;YACAL,OAAA,CAAAK,KAAA,wBAAAA,KAAA;YACA;UACA;QACA;UACAL,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IACA;IAEAH,MAAAf,IAAA;MACA;MACA;MACA,WAAAuB,OAAA,EAAAC,OAAA,EAAAC,MAAA;QACAC,KAAA,CAAAC,IAAA,eAAA3B,IAAA,EACAgB,IAAA,CAAAY,QAAA,IAAAJ,OAAA,CAAAI,QAAA,GACAP,KAAA,CAAAC,KAAA,IAAAG,MAAA,CAAAH,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}