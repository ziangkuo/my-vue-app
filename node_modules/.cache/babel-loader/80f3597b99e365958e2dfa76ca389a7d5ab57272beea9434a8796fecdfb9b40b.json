{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Plyr from 'plyr';\nimport 'plyr/dist/plyr.css';\nexport default {\n  data() {\n    return {\n      player: null,\n      subtitles: []\n    };\n  },\n  mounted() {\n    this.player = new Plyr(this.$refs.video);\n    this.loadSubtitles();\n  },\n  beforeDestroy() {\n    if (this.player) {\n      this.player.destroy();\n    }\n  },\n  methods: {\n    async loadSubtitles() {\n      // Load the .srt file\n      const response = await fetch('../assets/示例视频.srt');\n      const srtText = await response.text();\n\n      // Parse the .srt file\n      const lines = srtText.split('\\n');\n      for (let i = 0; i < lines.length; i += 4) {\n        const text = lines[i + 2];\n        const [start, end] = lines[i + 1].split(' --> ');\n        this.subtitles.push({\n          text,\n          start,\n          end\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["Plyr","data","player","subtitles","mounted","$refs","video","loadSubtitles","beforeDestroy","destroy","methods","response","fetch","srtText","text","lines","split","i","length","start","end","push"],"sources":["src/views/Video.vue"],"sourcesContent":["<template>\r\n    <el-row>\r\n        <el-col :span=\"16\">\r\n            <el-card class=\"box-card\" style=\"padding-right: 10px;\">\r\n                <div class = \"video\">\r\n                    <video ref=\"video\" src=\"../assets/示例视频.mp4\"></video>\r\n                </div>\r\n                \r\n            </el-card>\r\n        </el-col>\r\n        <el-col :span=\"8\" style=\"padding-left: 10px;\">\r\n            <div class=\"subtitle\">\r\n                <el-card :body-style=\"{display:'flex', flexDirection: 'column', alignItems: 'start', padding: '10px'}\">\r\n                    <div v-for=\"(subtitle, index) in subtitles\" :key=\"index\" class=\"subtitle-text\">\r\n                        <p>{{ subtitle.text }}</p>\r\n                        <p>{{ subtitle.start }} --> {{ subtitle.end }}</p>\r\n                    </div>\r\n                </el-card>\r\n            </div>\r\n        </el-col>\r\n    </el-row>\r\n</template>\r\n\r\n<script>\r\nimport Plyr from 'plyr'\r\nimport 'plyr/dist/plyr.css'\r\nexport default {\r\n    data() {\r\n        return {\r\n            player: null,\r\n            subtitles: []\r\n        }\r\n    },\r\n    mounted(){\r\n        this.player = new Plyr(this.$refs.video)\r\n        this.loadSubtitles()\r\n    },\r\n    beforeDestroy(){\r\n        if(this.player){\r\n            this.player.destroy()\r\n        \r\n    }\r\n},\r\nmethods: {\r\n    async loadSubtitles() {\r\n        // Load the .srt file\r\n        const response = await fetch('../assets/示例视频.srt')\r\n        const srtText = await response.text()\r\n\r\n        // Parse the .srt file\r\n        const lines = srtText.split('\\n')\r\n        for (let i = 0; i < lines.length; i += 4) {\r\n            const text = lines[i + 2]\r\n            const [start, end] = lines[i + 1].split(' --> ')\r\n            this.subtitles.push({ text, start, end })\r\n        }\r\n    }\r\n}\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.user{\r\n    display: flex;\r\n    align-items: center;\r\n    img{\r\n        width : 150px;\r\n        height: 150px;\r\n        border-radius: 50%;\r\n        margin-right: 40px;\r\n    }\r\n    .user-info{\r\n        .name{\r\n            font-size: 32px;\r\n            color: #333;\r\n            margin-bottom: 10px;\r\n        }\r\n        .access{\r\n            color: #999999;\r\n        }\r\n    }\r\n}\r\n.login-info{\r\n    p{\r\n        font-size: 14px;\r\n        line-height: 28px;\r\n        color: #999999;\r\n        span{\r\n            color: #666666;\r\n            margin-left: 60px;\r\n        }\r\n    }\r\n}\r\n.subtitle{\r\n    display: flex ;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n\r\n    .el-icon-success{\r\n        font-size: 30px;\r\n        width: 80px;\r\n        height: 80px;\r\n        text-align: center;\r\n        line-height: 80px;\r\n        color: #fff;\r\n    }\r\n    .detailed{\r\n       display: flex;\r\n       flex-direction: column;\r\n       justify-content: center;\r\n       margin-left: 15px;\r\n    }\r\n    .price{\r\n        font-size: 30px;\r\n        margin-bottom: 10px;\r\n        color: #333;\r\n        line-height: 30px;\r\n    }\r\n    .content{\r\n        font-size: 14px;\r\n        color: #999999;\r\n        text-align: center;\r\n    }\r\n}\r\n.subtitle-text {\r\n    color: #fff;\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n    padding: 2px 5px;\r\n    border-radius: 3px;\r\n    font-size: 14px;\r\n    line-height: 1.5;\r\n    margin-bottom: 10px;\r\n}\r\n</style>\r\n"],"mappings":";AAwBA,OAAAA,IAAA;AACA;AACA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,SAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAF,MAAA,OAAAF,IAAA,MAAAK,KAAA,CAAAC,KAAA;IACA,KAAAC,aAAA;EACA;EACAC,cAAA;IACA,SAAAN,MAAA;MACA,KAAAA,MAAA,CAAAO,OAAA;IAEA;EACA;EACAC,OAAA;IACA,MAAAH,cAAA;MACA;MACA,MAAAI,QAAA,SAAAC,KAAA;MACA,MAAAC,OAAA,SAAAF,QAAA,CAAAG,IAAA;;MAEA;MACA,MAAAC,KAAA,GAAAF,OAAA,CAAAG,KAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,GAAAF,KAAA,CAAAG,MAAA,EAAAD,CAAA;QACA,MAAAH,IAAA,GAAAC,KAAA,CAAAE,CAAA;QACA,OAAAE,KAAA,EAAAC,GAAA,IAAAL,KAAA,CAAAE,CAAA,MAAAD,KAAA;QACA,KAAAb,SAAA,CAAAkB,IAAA;UAAAP,IAAA;UAAAK,KAAA;UAAAC;QAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}