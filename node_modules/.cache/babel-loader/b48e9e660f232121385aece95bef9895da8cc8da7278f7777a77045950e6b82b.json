{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Mock from \"mockjs\";\n\n//图表数据\n\nlet list = [];\nexport default {\n  getStatisticalData: () => {\n    for (let i = 0; i < 7; i++) {\n      list.push(Mock.mock({\n        Apple: Mock.Random.float(100, 8000, 0, 0),\n        Huawei: Mock.Random.float(100, 8000, 0, 0),\n        Xiaomi: Mock.Random.float(100, 8000, 0, 0),\n        Oppo: Mock.Random.float(100, 8000, 0, 0),\n        Vivo: Mock.Random.float(100, 8000, 0, 0),\n        Samsung: Mock.Random.float(100, 8000, 0, 0)\n      }));\n    }\n    return {\n      code: 20000,\n      data: {\n        videoData: [{\n          name: 'Apple',\n          value: 5999\n        }, {\n          name: 'Huawei',\n          value: 6999\n        }, {\n          name: 'Xiaomi',\n          value: 3999\n        }, {\n          name: 'Oppo',\n          value: 2999\n        }, {\n          name: 'Vivo',\n          value: 4999\n        }, {\n          name: 'Samsung',\n          value: 8999\n        }],\n        //柱状图\n        userData: [{\n          data: '周一',\n          new: 5,\n          active: 200\n        }, {\n          data: '周二',\n          new: 10,\n          active: 300\n        }, {\n          data: '周三',\n          new: 15,\n          active: 400\n        }, {\n          data: '周四',\n          new: 20,\n          active: 500\n        }, {\n          data: '周五',\n          new: 25,\n          active: 600\n        }, {\n          data: '周六',\n          new: 30,\n          active: 700\n        }, {\n          data: '周日',\n          new: 35,\n          active: 800\n        }],\n        //折线图\n        orderData: {\n          date: ['20191001', '20191002', '20191003', '20191004', '20191005', '20191006', '20191007'],\n          data: list\n        },\n        tableData: [{\n          name: 'Apple',\n          todayBuy: 100,\n          monthBuy: 1000,\n          totalBuy: 10000\n        }, {\n          name: 'Huawei',\n          todayBuy: 200,\n          monthBuy: 2000,\n          totalBuy: 20000\n        }, {\n          name: 'Xiaomi',\n          todayBuy: 300,\n          monthBuy: 3000,\n          totalBuy: 30000\n        }, {\n          name: 'Oppo',\n          todayBuy: 400,\n          monthBuy: 4000,\n          totalBuy: 40000\n        }, {\n          name: 'Vivo',\n          todayBuy: 500,\n          monthBuy: 5000,\n          totalBuy: 50000\n        }, {\n          name: 'Samsung',\n          todayBuy: 600,\n          monthBuy: 6000,\n          totalBuy: 60000\n        }]\n      }\n    };\n  }\n};","map":{"version":3,"names":["Mock","list","getStatisticalData","i","push","mock","Apple","Random","float","Huawei","Xiaomi","Oppo","Vivo","Samsung","code","data","videoData","name","value","userData","new","active","orderData","date","tableData","todayBuy","monthBuy","totalBuy"],"sources":["C:/Users/Blank/Documents/GitHub/my-vue-app/src/api/mockServeData/voice.js"],"sourcesContent":["import Mock from \"mockjs\";\r\n\r\n//图表数据\r\n\r\nlet list = []\r\nexport default {\r\n    getStatisticalData: () => {\r\n        for (let i = 0; i < 7; i++) {\r\n            list.push(\r\n                Mock.mock({\r\n                    Apple: Mock.Random.float(100, 8000, 0, 0),\r\n                    Huawei: Mock.Random.float(100, 8000, 0, 0),\r\n                    Xiaomi: Mock.Random.float(100, 8000, 0, 0),\r\n                    Oppo: Mock.Random.float(100, 8000, 0, 0),\r\n                    Vivo: Mock.Random.float(100, 8000, 0, 0),\r\n                    Samsung: Mock.Random.float(100, 8000, 0, 0),\r\n                })\r\n            )\r\n        }\r\n        return {\r\n            code: 20000,\r\n            data: {\r\n                videoData: [\r\n                    {\r\n                        name: 'Apple',\r\n                        value: 5999\r\n                    },\r\n                    {\r\n                        name: 'Huawei',\r\n                        value: 6999\r\n                    },\r\n                    {\r\n                        name: 'Xiaomi',\r\n                        value: 3999\r\n                    },\r\n                    {\r\n                        name: 'Oppo',\r\n                        value: 2999\r\n                    },\r\n                    {\r\n                        name: 'Vivo',\r\n                        value: 4999\r\n                    },\r\n                    {\r\n                        name: 'Samsung',\r\n                        value: 8999\r\n                    }\r\n                ],\r\n\r\n                //柱状图\r\n                userData: [\r\n                    {\r\n                        data: '周一',\r\n                        new: 5,\r\n                        active: 200\r\n                    },\r\n                    {\r\n                        data: '周二',\r\n                        new: 10,\r\n                        active: 300\r\n                    },\r\n                    {\r\n                        data: '周三',\r\n                        new: 15,\r\n                        active: 400\r\n                    },\r\n                    {\r\n                        data: '周四',\r\n                        new: 20,\r\n                        active: 500\r\n                    },\r\n                    {\r\n                        data: '周五',\r\n                        new: 25,\r\n                        active: 600\r\n                    },\r\n                    {\r\n                        data: '周六',\r\n                        new: 30,\r\n                        active: 700\r\n                    },\r\n                    {\r\n                        data: '周日',\r\n                        new: 35,\r\n                        active: 800\r\n                    }\r\n                ],\r\n                //折线图\r\n                orderData: {\r\n                    date: ['20191001', '20191002', '20191003', '20191004', '20191005', '20191006', '20191007'],\r\n                    data: list\r\n                },\r\n                tableData: [\r\n                    {\r\n                        name: 'Apple',\r\n                        todayBuy: 100,\r\n                        monthBuy: 1000,\r\n                        totalBuy: 10000\r\n                    },\r\n                    {\r\n                        name: 'Huawei',\r\n                        todayBuy: 200,\r\n                        monthBuy: 2000,\r\n                        totalBuy: 20000\r\n                    },\r\n                    {\r\n                        name: 'Xiaomi',\r\n                        todayBuy: 300,\r\n                        monthBuy: 3000,\r\n                        totalBuy: 30000\r\n                    },\r\n                    {\r\n                        name: 'Oppo',\r\n                        todayBuy: 400,\r\n                        monthBuy: 4000,\r\n                        totalBuy: 40000\r\n                    },\r\n                    {\r\n                        name: 'Vivo',\r\n                        todayBuy: 500,\r\n                        monthBuy: 5000,\r\n                        totalBuy: 50000\r\n                    },\r\n                    {\r\n                        name: 'Samsung',\r\n                        todayBuy: 600,\r\n                        monthBuy: 6000,\r\n                        totalBuy: 60000\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}