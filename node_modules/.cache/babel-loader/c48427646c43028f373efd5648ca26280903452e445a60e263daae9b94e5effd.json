{"ast":null,"code":"// import Mock from \"mockjs\";\n\n// export default {\n//     getMenu: config => {\n//         return new Promise((resolve, reject) => {\n//         const { mail, password } = JSON.parse(config.body)\n//         // 判断用户是否存在\n//         if (mail === 'admin@kth.se' && password === 'password') {\n//             return {\n//                 code: 20000,\n//                 data: {\n//                     menu: [\n//                         {\n//                             path:'/home',\n//                             name:'home',\n//                             label:'首页',\n//                             icon:'s-home',\n//                             url:'home/index'\n//                         },\n//                         {\n//                             path:'/video',\n//                             name:'video',\n//                             label:'视频管理页',\n//                             icon:'video-play',\n//                             url:'video/index'\n//                         },\n//                         {\n//                             path:'/voice',\n//                             name:'voice',\n//                             label:'语音管理页',\n//                             icon:'voice',\n//                             url:'voice/index'\n\n//                         },\n//                         {\n//                             label:'其他',\n//                             icon:'location',\n//                             children:[\n//                                 {\n//                                     path:'/page1',\n//                                     name:'page1',\n//                                     label:'页面1',\n//                                     icon:'setting',\n//                                     url:'other/page1'\n//                                 },\n//                                 {\n//                                     path:'/page2',\n//                                     name:'page2',\n//                                     label:'页面2',\n//                                     icon:'setting',\n//                                     url:'other/page2'\n//                                 }\n//                             ]\n//                         }\n//                     ],\n//                     token: Mock.Random.guid(),\n//                     message: '获取成功'\n//                 } \n//             }\n//         } else{\n//                 return {\n//                     code: -999,\n//                     data: {\n//                         message: '账号或密码错误'\n//                     }\n\n//                 }\n//             }\n//     }\n// }\n// }\n// }\n\nexport default {\n  getMenu: config => {\n    return new Promise((resolve, reject) => {\n      const {\n        mail,\n        password\n      } = config;\n      // 判断用户是否存在\n      if (mail === 'admin@kth.se' && password === 'password') {\n        resolve({\n          code: 20000,\n          data: {\n            menu: [{\n              path: '/home',\n              name: 'home',\n              label: '首页',\n              icon: 's-home',\n              url: 'home/index'\n            }, {\n              path: '/video',\n              name: 'video',\n              label: '视频管理页',\n              icon: 'video-play',\n              url: 'video/index'\n            }, {\n              path: '/voice',\n              name: 'voice',\n              label: '语音管理页',\n              icon: 'voice',\n              url: 'voice/index'\n            }, {\n              label: '其他',\n              icon: 'location',\n              children: [{\n                path: '/page1',\n                name: 'page1',\n                label: '页面1',\n                icon: 'setting',\n                url: 'other/page1'\n              }, {\n                path: '/page2',\n                name: 'page2',\n                label: '页面2',\n                icon: 'setting',\n                url: 'other/page2'\n              }]\n            }]\n            // ...\n          }\n        });\n      } else {\n        resolve({\n          code: -999,\n          data: {\n            message: '账号或密码错误'\n          }\n        });\n      }\n    });\n  }\n};","map":{"version":3,"names":["getMenu","config","Promise","resolve","reject","mail","password","code","data","menu","path","name","label","icon","url","children","message"],"sources":["/Users/eliaskwok/Documents/GitHub/my-vue-app/src/api/mockServeData/permission.js"],"sourcesContent":["// import Mock from \"mockjs\";\n\n// export default {\n//     getMenu: config => {\n//         return new Promise((resolve, reject) => {\n//         const { mail, password } = JSON.parse(config.body)\n//         // 判断用户是否存在\n//         if (mail === 'admin@kth.se' && password === 'password') {\n//             return {\n//                 code: 20000,\n//                 data: {\n//                     menu: [\n//                         {\n//                             path:'/home',\n//                             name:'home',\n//                             label:'首页',\n//                             icon:'s-home',\n//                             url:'home/index'\n//                         },\n//                         {\n//                             path:'/video',\n//                             name:'video',\n//                             label:'视频管理页',\n//                             icon:'video-play',\n//                             url:'video/index'\n//                         },\n//                         {\n//                             path:'/voice',\n//                             name:'voice',\n//                             label:'语音管理页',\n//                             icon:'voice',\n//                             url:'voice/index'\n                        \n//                         },\n//                         {\n//                             label:'其他',\n//                             icon:'location',\n//                             children:[\n//                                 {\n//                                     path:'/page1',\n//                                     name:'page1',\n//                                     label:'页面1',\n//                                     icon:'setting',\n//                                     url:'other/page1'\n//                                 },\n//                                 {\n//                                     path:'/page2',\n//                                     name:'page2',\n//                                     label:'页面2',\n//                                     icon:'setting',\n//                                     url:'other/page2'\n//                                 }\n//                             ]\n//                         }\n//                     ],\n//                     token: Mock.Random.guid(),\n//                     message: '获取成功'\n//                 } \n//             }\n//         } else{\n//                 return {\n//                     code: -999,\n//                     data: {\n//                         message: '账号或密码错误'\n//                     }\n\n//                 }\n//             }\n//     }\n// }\n// }\n// }\n\nexport default {\ngetMenu: config => {\n    return new Promise((resolve, reject) => {\n        const { mail, password } = config\n        // 判断用户是否存在\n        if (mail === 'admin@kth.se' && password === 'password') {\n            resolve({\n                code: 20000,\n                data: {\n                    menu: [\n                        {\n                            path:'/home',\n                            name:'home',\n                            label:'首页',\n                            icon:'s-home',\n                            url:'home/index'\n                        },\n                        {\n                            path:'/video',\n                            name:'video',\n                            label:'视频管理页',\n                            icon:'video-play',\n                            url:'video/index'\n                        },\n                        {\n                            path:'/voice',\n                            name:'voice',\n                            label:'语音管理页',\n                            icon:'voice',\n                            url:'voice/index'\n                        \n                        },\n                        {\n                            label:'其他',\n                            icon:'location',\n                            children:[\n                                {\n                                    path:'/page1',\n                                    name:'page1',\n                                    label:'页面1',\n                                    icon:'setting',\n                                    url:'other/page1'\n                                },\n                                {\n                                    path:'/page2',\n                                    name:'page2',\n                                    label:'页面2',\n                                    icon:'setting',\n                                    url:'other/page2'\n                                }\n                            ]\n                        }\n                    ],\n                    // ...\n                } \n            })\n        } else {\n            resolve({\n                code: -999,\n                data: {\n                    message: '账号或密码错误'\n                }\n            })\n        }\n    })\n}\n}\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe;EACfA,OAAO,EAAEC,MAAM,IAAI;IACf,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACpC,MAAM;QAAEC,IAAI;QAAEC;MAAS,CAAC,GAAGL,MAAM;MACjC;MACA,IAAII,IAAI,KAAK,cAAc,IAAIC,QAAQ,KAAK,UAAU,EAAE;QACpDH,OAAO,CAAC;UACJI,IAAI,EAAE,KAAK;UACXC,IAAI,EAAE;YACFC,IAAI,EAAE,CACF;cACIC,IAAI,EAAC,OAAO;cACZC,IAAI,EAAC,MAAM;cACXC,KAAK,EAAC,IAAI;cACVC,IAAI,EAAC,QAAQ;cACbC,GAAG,EAAC;YACR,CAAC,EACD;cACIJ,IAAI,EAAC,QAAQ;cACbC,IAAI,EAAC,OAAO;cACZC,KAAK,EAAC,OAAO;cACbC,IAAI,EAAC,YAAY;cACjBC,GAAG,EAAC;YACR,CAAC,EACD;cACIJ,IAAI,EAAC,QAAQ;cACbC,IAAI,EAAC,OAAO;cACZC,KAAK,EAAC,OAAO;cACbC,IAAI,EAAC,OAAO;cACZC,GAAG,EAAC;YAER,CAAC,EACD;cACIF,KAAK,EAAC,IAAI;cACVC,IAAI,EAAC,UAAU;cACfE,QAAQ,EAAC,CACL;gBACIL,IAAI,EAAC,QAAQ;gBACbC,IAAI,EAAC,OAAO;gBACZC,KAAK,EAAC,KAAK;gBACXC,IAAI,EAAC,SAAS;gBACdC,GAAG,EAAC;cACR,CAAC,EACD;gBACIJ,IAAI,EAAC,QAAQ;gBACbC,IAAI,EAAC,OAAO;gBACZC,KAAK,EAAC,KAAK;gBACXC,IAAI,EAAC,SAAS;gBACdC,GAAG,EAAC;cACR,CAAC;YAET,CAAC;YAEL;UACJ;QACJ,CAAC,CAAC;MACN,CAAC,MAAM;QACHX,OAAO,CAAC;UACJI,IAAI,EAAE,CAAC,GAAG;UACVC,IAAI,EAAE;YACFQ,OAAO,EAAE;UACb;QACJ,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;EACN;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}