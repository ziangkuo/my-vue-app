{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Plyr from 'plyr';\nimport 'plyr/dist/plyr.css';\nexport default {\n  data() {\n    return {\n      player: null,\n      subtitles: []\n    };\n  },\n  mounted() {\n    this.player = new Plyr(this.$refs.video);\n    this.loadSubtitles();\n  },\n  beforeDestroy() {\n    if (this.player) {\n      this.player.destroy();\n    }\n  },\n  methods: {\n    async loadSubtitles() {\n      // Load the .srt file\n      const response = await fetch('../assets/示例视频.srt');\n      const srtText = await response.text();\n\n      // Parse the .srt file\n      const lines = srtText.split('\\n');\n      for (let i = 0; i < lines.length; i += 4) {\n        const text = lines[i + 2];\n        const [start, end] = lines[i + 1].split(' --> ');\n        this.subtitles.push({\n          text,\n          start,\n          end\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["Plyr","data","player","subtitles","mounted","$refs","video","loadSubtitles","beforeDestroy","destroy","methods","response","fetch","srtText","text","lines","split","i","length","start","end","push"],"sources":["src/views/Video.vue"],"sourcesContent":["<template>\n    <el-row>\n        <el-col :span=\"16\">\n            <el-card class=\"box-card\" style=\"padding-right: 10px;\">\n                <div class = \"video\">\n                    <video ref=\"video\" src=\"../assets/示例视频.mp4\"></video>\n                </div>\n                \n            </el-card>\n        </el-col>\n        <el-col :span=\"8\" style=\"padding-left: 10px;\">\n            <div class=\"subtitle\">\n                <el-card :body-style=\"{display:'flex', flexDirection: 'column', alignItems: 'start', padding: '10px'}\">\n                    <div v-for=\"(subtitle, index) in subtitles\" :key=\"index\" class=\"subtitle-text\">\n                        <p>{{ subtitle.text }}</p>\n                        <p>{{ subtitle.start }} --> {{ subtitle.end }}</p>\n                    </div>\n                </el-card>\n            </div>\n        </el-col>\n    </el-row>\n</template>\n\n<script>\nimport Plyr from 'plyr'\nimport 'plyr/dist/plyr.css'\nexport default {\n    data() {\n        return {\n            player: null,\n            subtitles: []\n        }\n    },\n    mounted(){\n        this.player = new Plyr(this.$refs.video)\n        this.loadSubtitles()\n    },\n    beforeDestroy(){\n        if(this.player){\n            this.player.destroy()\n        \n    }\n},\nmethods: {\n    async loadSubtitles() {\n        // Load the .srt file\n        const response = await fetch('../assets/示例视频.srt')\n        const srtText = await response.text()\n\n        // Parse the .srt file\n        const lines = srtText.split('\\n')\n        for (let i = 0; i < lines.length; i += 4) {\n            const text = lines[i + 2]\n            const [start, end] = lines[i + 1].split(' --> ')\n            this.subtitles.push({ text, start, end })\n        }\n    }\n}\n}\n\n</script>\n\n<style lang=\"less\" scoped>\n.user{\n    display: flex;\n    align-items: center;\n    img{\n        width : 150px;\n        height: 150px;\n        border-radius: 50%;\n        margin-right: 40px;\n    }\n    .user-info{\n        .name{\n            font-size: 32px;\n            color: #333;\n            margin-bottom: 10px;\n        }\n        .access{\n            color: #999999;\n        }\n    }\n}\n.login-info{\n    p{\n        font-size: 14px;\n        line-height: 28px;\n        color: #999999;\n        span{\n            color: #666666;\n            margin-left: 60px;\n        }\n    }\n}\n.subtitle{\n    display: flex ;\n    flex-wrap: wrap;\n    justify-content: space-between;\n\n    .el-icon-success{\n        font-size: 30px;\n        width: 80px;\n        height: 80px;\n        text-align: center;\n        line-height: 80px;\n        color: #fff;\n    }\n    .detailed{\n       display: flex;\n       flex-direction: column;\n       justify-content: center;\n       margin-left: 15px;\n    }\n    .price{\n        font-size: 30px;\n        margin-bottom: 10px;\n        color: #333;\n        line-height: 30px;\n    }\n    .content{\n        font-size: 14px;\n        color: #999999;\n        text-align: center;\n    }\n}\n.subtitle-text {\n    color: #fff;\n    background-color: rgba(0, 0, 0, 0.8);\n    padding: 2px 5px;\n    border-radius: 3px;\n    font-size: 14px;\n    line-height: 1.5;\n    margin-bottom: 10px;\n}\n</style>\n"],"mappings":";AAwBA,OAAAA,IAAA;AACA;AACA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,SAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAF,MAAA,OAAAF,IAAA,MAAAK,KAAA,CAAAC,KAAA;IACA,KAAAC,aAAA;EACA;EACAC,cAAA;IACA,SAAAN,MAAA;MACA,KAAAA,MAAA,CAAAO,OAAA;IAEA;EACA;EACAC,OAAA;IACA,MAAAH,cAAA;MACA;MACA,MAAAI,QAAA,SAAAC,KAAA;MACA,MAAAC,OAAA,SAAAF,QAAA,CAAAG,IAAA;;MAEA;MACA,MAAAC,KAAA,GAAAF,OAAA,CAAAG,KAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,GAAAF,KAAA,CAAAG,MAAA,EAAAD,CAAA;QACA,MAAAH,IAAA,GAAAC,KAAA,CAAAE,CAAA;QACA,OAAAE,KAAA,EAAAC,GAAA,IAAAL,KAAA,CAAAE,CAAA,MAAAD,KAAA;QACA,KAAAb,SAAA,CAAAkB,IAAA;UAAAP,IAAA;UAAAK,KAAA;UAAAC;QAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}