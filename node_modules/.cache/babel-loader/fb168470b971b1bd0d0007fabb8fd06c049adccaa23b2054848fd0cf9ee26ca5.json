{"ast":null,"code":"import IPconfig from \"./IPconfig\";\nconst baseUrl = IPconfig.baseUrl;\nexport default {\n  name: 'VideoUpload',\n  data() {\n    return {\n      // uploadUrl: baseUrl + '/api/uploadVideo3',\n      //视频部分\n      videoForm: {\n        videoId: '',\n        videoUrl: ''\n      },\n      videoFlag: false,\n      Plus: true,\n      //上传视频时带的参数，这个地址就是后端保存磁盘的地址。可以更改。不建议放F盘，有的电脑可能没有F盘，只有C和D\n      Path: {\n        url: 'F:/jliason/0723/videos'\n      },\n      videoUploadPercent: 0\n    };\n  },\n  methods: {\n    onSubmit() {\n      // 处理表单提交逻辑\n      // 可以使用 this.form 访问表单数据\n      // 例如：this.form.videoId、this.form.videoUrl 等\n      this.$router.replace('/play');\n    },\n    goUploadSplit() {\n      this.$router.replace('/uploadsplit');\n    },\n    goPlayAll() {\n      this.$router.replace('/playall');\n    },\n    goPlayMerge() {\n      this.$router.replace('/playmerge');\n    },\n    //视频部分\n    // 视频上传前执行\n    beforeUploadVideo(file) {\n      //文件大小\n      const isLt300M = file.size / 1024 / 1024 < 5000;\n      //视频后缀检查\n      if (['video/mp4', 'video/ogg', 'video/flv', 'video/avi', 'video/wmv', 'video/rmvb'].indexOf(file.type) === -1) {\n        this.$message.error('请上传正确的视频格式');\n        return false;\n      }\n      if (!isLt300M) {\n        this.$message.error('上传视频大小不能超过5000MB哦!');\n        return false;\n      }\n    },\n    // 视频上传过程中执行\n    uploadVideoProcess(event, file, fileList) {\n      this.Plus = false;\n      this.videoFlag = true;\n      this.videoUploadPercent = +file.percentage.toFixed(0);\n    },\n    // 视频上传成功是执行\n    handleVideoSuccess(res, file) {\n      this.Plus = false;\n      this.videoUploadPercent = 100;\n      console.log(res);\n      // 如果为200代表视频保存成功\n      if (res.resCode === '200') {\n        // 接收视频传回来的名称和保存地址\n        // 至于怎么使用看你啦~\n        this.videoForm.videoId = res.newVidoeName;\n        this.videoForm.videoUrl = res.VideoUrl;\n        this.$message.success('视频上传成功！');\n      } else {\n        this.$message.error('视频上传失败，请重新上传！');\n      }\n    }\n  }\n};","map":{"version":3,"names":["IPconfig","baseUrl","name","data","videoForm","videoId","videoUrl","videoFlag","Plus","Path","url","videoUploadPercent","methods","onSubmit","$router","replace","goUploadSplit","goPlayAll","goPlayMerge","beforeUploadVideo","file","isLt300M","size","indexOf","type","$message","error","uploadVideoProcess","event","fileList","percentage","toFixed","handleVideoSuccess","res","console","log","resCode","newVidoeName","VideoUrl","success"],"sources":["src/views/Pagetwo.vue"],"sourcesContent":["<template>\n    <el-form ref=\"form\" :model=\"videoForm\" label-width=\"80px\">\n      <div class=\"release_title\"><h1 style=\"color: red\">本页为不分片上传视频，去分页上传请点击下方按钮</h1></div>\n      <el-form-item label=\"\">\n        <el-upload class=\"avatar-uploader el-upload--text\" :drag=\"Plus\" :action=\"uploadUrl\" multiple :show-file-list=\"false\"\n          :data=\"{ SavePath: this.Path.url }\" :on-success=\"handleVideoSuccess\" :before-upload=\"beforeUploadVideo\"\n          :on-progress=\"uploadVideoProcess\">\n          <i v-if=\"Plus\" class=\"el-icon-upload\"></i>\n          <div v-if=\"Plus\" class=\"el-upload__text\">\n            将文件拖到此处，或<em>点击上传</em>\n          </div>\n          <el-progress v-if=\"videoFlag == true\" type=\"circle\" :percentage=\"videoUploadPercent\"\n            style=\"margin-top: 30px\"></el-progress>\n          <div class=\"el-upload__tip\" slot=\"tip\">\n            只能上传mp4/flv/avi文件，且不超过5000M\n          </div>\n        </el-upload>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"goUploadSplit\">去分片上传页面(推荐)</el-button>\n        <el-button type=\"primary\" @click=\"onSubmit\">去分片播放页面</el-button>\n        <el-button type=\"primary\" @click=\"goPlayAll\">去单片播放页面（推荐）</el-button>\n        <el-button type=\"primary\" @click=\"goPlayMerge\">去边放边播播放页面(未完成)</el-button>\n      </el-form-item>\n    </el-form>\n  </template>\n  \n  <script>\n  import IPconfig from \"./IPconfig\";\n  const baseUrl = IPconfig.baseUrl;\n  export default {\n    name: 'VideoUpload',\n    data() {\n      return {\n        // uploadUrl: baseUrl + '/api/uploadVideo3',\n        //视频部分\n        videoForm: {\n          videoId: '',\n          videoUrl: ''\n        },\n        videoFlag: false,\n        Plus: true,\n        //上传视频时带的参数，这个地址就是后端保存磁盘的地址。可以更改。不建议放F盘，有的电脑可能没有F盘，只有C和D\n        Path: {\n          url: 'F:/jliason/0723/videos'\n        },\n        videoUploadPercent: 0\n      };\n    },\n  \n    methods: {\n      onSubmit() {\n        // 处理表单提交逻辑\n        // 可以使用 this.form 访问表单数据\n        // 例如：this.form.videoId、this.form.videoUrl 等\n        this.$router.replace('/play')\n      },\n      goUploadSplit(){\n        this.$router.replace('/uploadsplit')\n      },\n      goPlayAll() {\n        this.$router.replace('/playall')\n      },\n      goPlayMerge() {\n        this.$router.replace('/playmerge')\n      },\n      //视频部分\n      // 视频上传前执行\n      beforeUploadVideo(file) {\n        //文件大小\n        const isLt300M = file.size / 1024 / 1024 < 5000\n        //视频后缀检查\n        if (['video/mp4', 'video/ogg', 'video/flv', 'video/avi', 'video/wmv', 'video/rmvb'].indexOf(file.type) === -1) {\n          this.$message.error('请上传正确的视频格式')\n          return false\n        }\n        if (!isLt300M) {\n          this.$message.error('上传视频大小不能超过5000MB哦!')\n          return false\n        }\n      },\n      // 视频上传过程中执行\n      uploadVideoProcess(event, file, fileList) {\n        this.Plus = false\n        this.videoFlag = true\n        this.videoUploadPercent = + file.percentage.toFixed(0)\n      },\n      // 视频上传成功是执行\n      handleVideoSuccess(res, file) {\n        this.Plus = false\n        this.videoUploadPercent = 100\n        console.log(res)\n        // 如果为200代表视频保存成功\n        if (res.resCode === '200') {\n          // 接收视频传回来的名称和保存地址\n          // 至于怎么使用看你啦~\n          this.videoForm.videoId = res.newVidoeName\n          this.videoForm.videoUrl = res.VideoUrl\n          this.$message.success('视频上传成功！')\n        } else {\n          this.$message.error('视频上传失败，请重新上传！')\n        }\n      }\n  \n    },\n  };\n  </script>\n  \n  <style></style>\n  "],"mappings":"AA4BA,OAAAA,QAAA;AACA,MAAAC,OAAA,GAAAD,QAAA,CAAAC,OAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACA;MACA;MACAC,SAAA;QACAC,OAAA;QACAC,QAAA;MACA;MACAC,SAAA;MACAC,IAAA;MACA;MACAC,IAAA;QACAC,GAAA;MACA;MACAC,kBAAA;IACA;EACA;EAEAC,OAAA;IACAC,SAAA;MACA;MACA;MACA;MACA,KAAAC,OAAA,CAAAC,OAAA;IACA;IACAC,cAAA;MACA,KAAAF,OAAA,CAAAC,OAAA;IACA;IACAE,UAAA;MACA,KAAAH,OAAA,CAAAC,OAAA;IACA;IACAG,YAAA;MACA,KAAAJ,OAAA,CAAAC,OAAA;IACA;IACA;IACA;IACAI,kBAAAC,IAAA;MACA;MACA,MAAAC,QAAA,GAAAD,IAAA,CAAAE,IAAA;MACA;MACA,oFAAAC,OAAA,CAAAH,IAAA,CAAAI,IAAA;QACA,KAAAC,QAAA,CAAAC,KAAA;QACA;MACA;MACA,KAAAL,QAAA;QACA,KAAAI,QAAA,CAAAC,KAAA;QACA;MACA;IACA;IACA;IACAC,mBAAAC,KAAA,EAAAR,IAAA,EAAAS,QAAA;MACA,KAAArB,IAAA;MACA,KAAAD,SAAA;MACA,KAAAI,kBAAA,IAAAS,IAAA,CAAAU,UAAA,CAAAC,OAAA;IACA;IACA;IACAC,mBAAAC,GAAA,EAAAb,IAAA;MACA,KAAAZ,IAAA;MACA,KAAAG,kBAAA;MACAuB,OAAA,CAAAC,GAAA,CAAAF,GAAA;MACA;MACA,IAAAA,GAAA,CAAAG,OAAA;QACA;QACA;QACA,KAAAhC,SAAA,CAAAC,OAAA,GAAA4B,GAAA,CAAAI,YAAA;QACA,KAAAjC,SAAA,CAAAE,QAAA,GAAA2B,GAAA,CAAAK,QAAA;QACA,KAAAb,QAAA,CAAAc,OAAA;MACA;QACA,KAAAd,QAAA,CAAAC,KAAA;MACA;IACA;EAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}