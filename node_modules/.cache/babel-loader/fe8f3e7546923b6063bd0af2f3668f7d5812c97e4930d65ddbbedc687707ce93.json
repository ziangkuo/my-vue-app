{"ast":null,"code":"import { ref as storageRef, uploadBytesResumable, getDownloadURL } from '../firebase/storage';\nimport { storage } from '../firebase/init'; // 确保这个路径匹配你的Firebase配置文件路径\n\nexport default {\n  data() {\n    return {\n      uploading: false,\n      uploadProgress: 0,\n      videoUrl: ''\n    };\n  },\n  methods: {\n    uploadFile(event) {\n      const file = event.target.files[0];\n      if (!file) return;\n      const fileRef = storageRef(storage, `videos/${file.name}`);\n      const uploadTask = uploadBytesResumable(fileRef, file);\n      uploadTask.on('state_changed', snapshot => {\n        this.uploading = true;\n        const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        this.uploadProgress = progress.toFixed(0);\n      }, error => {\n        console.log(error);\n        this.uploading = false;\n        // 处理任何上传错误\n      }, () => {\n        getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n          console.log('File available at', downloadURL);\n          this.videoUrl = downloadURL;\n          this.uploading = false;\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["ref","storageRef","uploadBytesResumable","getDownloadURL","storage","data","uploading","uploadProgress","videoUrl","methods","uploadFile","event","file","target","files","fileRef","name","uploadTask","on","snapshot","progress","bytesTransferred","totalBytes","toFixed","error","console","log","then","downloadURL"],"sources":["src/views/Pagetwo.vue"],"sourcesContent":["<template>\n    <div>\n      <input type=\"file\" @change=\"uploadFile\" />\n      <div v-if=\"uploading\">\n        上传中: {{ uploadProgress }}%\n      </div>\n      <div v-if=\"videoUrl\">\n        上传成功! 视频URL: <a :href=\"videoUrl\" target=\"_blank\">{{ videoUrl }}</a>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import { ref as storageRef, uploadBytesResumable, getDownloadURL } from '../firebase/storage';\n  import { storage } from '../firebase/init'; // 确保这个路径匹配你的Firebase配置文件路径\n  \n  export default {\n    data() {\n      return {\n        uploading: false,\n        uploadProgress: 0,\n        videoUrl: '',\n      };\n    },\n    methods: {\n      uploadFile(event) {\n        const file = event.target.files[0];\n        if (!file) return;\n        \n        const fileRef = storageRef(storage, `videos/${file.name}`);\n        const uploadTask = uploadBytesResumable(fileRef, file);\n  \n        uploadTask.on(\n          'state_changed',\n          (snapshot) => {\n            this.uploading = true;\n            const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            this.uploadProgress = progress.toFixed(0);\n          },\n          (error) => {\n            console.log(error);\n            this.uploading = false;\n            // 处理任何上传错误\n          },\n          () => {\n            getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n              console.log('File available at', downloadURL);\n              this.videoUrl = downloadURL;\n              this.uploading = false;\n            });\n          }\n        );\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  </style>\n  "],"mappings":"AAaA,SAAAA,GAAA,IAAAC,UAAA,EAAAC,oBAAA,EAAAC,cAAA;AACA,SAAAC,OAAA;;AAEA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,cAAA;MACAC,QAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAAC,KAAA;MACA,MAAAC,IAAA,GAAAD,KAAA,CAAAE,MAAA,CAAAC,KAAA;MACA,KAAAF,IAAA;MAEA,MAAAG,OAAA,GAAAd,UAAA,CAAAG,OAAA,YAAAQ,IAAA,CAAAI,IAAA;MACA,MAAAC,UAAA,GAAAf,oBAAA,CAAAa,OAAA,EAAAH,IAAA;MAEAK,UAAA,CAAAC,EAAA,CACA,iBACAC,QAAA;QACA,KAAAb,SAAA;QACA,MAAAc,QAAA,GAAAD,QAAA,CAAAE,gBAAA,GAAAF,QAAA,CAAAG,UAAA;QACA,KAAAf,cAAA,GAAAa,QAAA,CAAAG,OAAA;MACA,GACAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;QACA,KAAAlB,SAAA;QACA;MACA,GACA;QACAH,cAAA,CAAAc,UAAA,CAAAE,QAAA,CAAAnB,GAAA,EAAA2B,IAAA,CAAAC,WAAA;UACAH,OAAA,CAAAC,GAAA,sBAAAE,WAAA;UACA,KAAApB,QAAA,GAAAoB,WAAA;UACA,KAAAtB,SAAA;QACA;MACA,CACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}